security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            id: App\Security\SessionUserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            lazy: false
            provider: app_user_provider
            custom_authenticators:
                - App\Security\SessionAuthenticator
            logout:
                path: app_logout
                target: app_login

    # Configure access control based on paths and roles
    access_control:
        # Documentation Access Control
        - { path: ^/docs, roles: PUBLIC_ACCESS }
        # API Access Control
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        # Create, update, delete operations restricted to doctors
        - { path: ^/api/patients$, methods: [POST], roles: ROLE_DOCTOR }
        - { path: '^/api/patients/[a-f0-9]{24}$', methods: [PUT, DELETE], roles: ROLE_DOCTOR }
        # Read operations allowed for all authenticated healthcare staff
        - { path: ^/api/patients, methods: [GET], roles: [IS_AUTHENTICATED_FULLY, ROLE_DOCTOR, ROLE_NURSE, ROLE_RECEPTIONIST, ROLE_ADMIN] }
        # Admin API access control
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        # Appointments API access control - restricted to receptionists
        - { path: ^/api/appointments, roles: ROLE_RECEPTIONIST }

    role_hierarchy:
        # Doctor has all permissions
        ROLE_DOCTOR: [ROLE_NURSE, ROLE_RECEPTIONIST]
        # Nurse has more permissions than receptionist
        ROLE_NURSE: [ROLE_RECEPTIONIST]